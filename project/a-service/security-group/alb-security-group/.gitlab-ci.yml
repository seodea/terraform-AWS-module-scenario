
# 공통 이미지 및 scripte 내용
default:
  image: 
    name: 'wotnek90/terraform-aws-cli:v1.3.7'
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# 공통 anchor 설정 
.aws-configure: &aws-configure-profile
  - mkdir ~/.aws/
  - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "" "" > ~/.aws/credentials
  - printf "[default]\nregion = %s\noutput = json\n" "" > ~/.aws/config

.terraform-init: &terraform-init-module
  - cd ${TF_DIR}
  - terraform init -reconfigure -get=true -upgrade

.common-feature: &common-feature
  # only:
  #   refs:
  #     - main
  allow_failure: false
  tags :
   - sdh-test-runner

.use-cache: &global_cache
  cache:
    - key: terraform
      paths:
        - ${TF_DIR}.terraform
      policy: pull-push


# For Example

.before-script: &before-script
  - echo "Execute this script first"
  - sleep 5

.main-script: &main-script
  - echo "Execute this script second"
  - echo "Execute this script too"

.after-script: &after-script
  - echo "Execute this script last"
  - sleep 5
    

###############
# 공통 변수 값 설정
###############

variables:
  TF_DIR : "project/a-service/security-group/alb-security-group"
  TAGS   : "sdh-test-runner"

###############
# CI Pipeline
###############

stages:
  - refresh
  - validate
  - plan
  - apply
  - destroy-plan
  - destroy

.refresh:
  stage: refresh
  <<: *common-feature
  <<: *global_cache
  
  before_script:
    - *terraform-init-module
  script:
    - terraform refresh
  when: manual
  
  # allow_failure: false
  # only:
  #   refs:
  #     - main
  # tags:
  #   - ''

validate:
  stage: validate
  <<: *common-feature
  <<: *global_cache

  before_script:
    - *terraform-init-module
    - env
    - pwd
  script:
    - echo "project/a-service/security-group/alb-security-group terraform validate"
    - terraform validate
  after_script:
    - ls ${TF_DIR}/.terraform
  
  # tags:
  #   - ''

.plan:
  stage: plan
  <<: *common-feature
  <<: *global_cache

  before_script:
    - *terraform-init-module
    - terraform version
  script :
   - |
    echo "project/a-service/security-group/alb-security-group terraform plan"
    terraform plan -refresh=false -out=planfile 
  after_script:
    - ls ${TF_DIR}/.terraform
    - pwd
  dependencies:
    - validate
  artifacts:
    paths:
      - ${TF_DIR}/planfile
  
  # tags:
  # - ''

.apply:
  stage: apply
  <<: *common-feature
  <<: *global_cache
  before_script:
    - *terraform-init-module
  script:
    - terraform apply planfile
  dependencies:
    - plan
  when: manual

.destroy-plan:
  stage: destroy-plan
  <<: *common-feature
  <<: *global_cache
  before_script:
    - *terraform-init-module
  script:
    - terraform plan -destroy

.destroy:
  stage: destroy
  <<: *common-feature
  <<: *global_cache
  before_script:
    - *terraform-init-module
  script:
    - terraform destroy -auto-approve
  needs:
    - destroy-plan
  when: manual
